{"name":"mapmod","enabled":true,"description":"Adjust the mapper.","type":"group","id":1,"items":[{"type":"function","name":"Read_Me","enabled":true,"id":4,"code":"/* \n\nMapmod v1.0.0\nby: Zahan of Achaea\n\n\nWhat does this even do:\n* Adjust map window size\n* Set default zoom\n* Shrink player-Flag\n* Shrink wilderness/sea map\n* Center wilderness/sea map\n* Display area name\n\n\n\nSettings are in the (function) onLoad.  Most actions can be adjusted.\n\nIf you want to preserve the original default, you can simply copy/paste to a new line underneath, then adjust the copy.\n\nWhen you change a setting, save and then use the alias to apply them.\n\nFor the changes to appear, your client must update.  Sometimes just ql works (overhead map), or you might have to load a new area (zoom), or sometimes you'll have to go to a different tab on your browser and then click back to your client tab (window resizing/zoom).  Think of it as part of the adventure!\n\nDisabling the plugin will not stop it from working.  You'll need to relog in a new tab afterwards to fully disable it.\n\nIf you have any problems or questions, send me a msg in the game or on the forum (forum msgs will get a slower response).\n\n\nThis plugin is provided for free but donations to Zahan (achaea) are always appreciated, no matter how small!\n\n\n<insert obligatory=\"use at your own risk\"/>\n\n*/"},{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// prevent loading on mobile\nif (client.mobile) {return;}\n// initialize the table\nif (typeof mapmod == \"undefined\") {mapmod = {};}\n\n\n\n/***** Settings *****/\nmapmod.flag_size = 17; // # of pixels\nmapmod.zoom = 8; // default seems to be 10.  6 seems to be min with scroll wheel\n\n\n/* Wilderness map */\nmapmod.resize_map = 1; // binary, 0 = off\nmapmod.font_size = 11; // # of pixels\nmapmod.line_height = 11; // # of pixels\n\n\n/* UI */\nmapmod.resize_windows = 1; // binary\n\n\n/* Window Widths -- these are % of overall. make sure the 3 add up to 100 */\nmapmod.left_column = 25;\nmapmod.middle_column = 50;\nmapmod.right_column = 25;\n\n\n/* Window Heights -- these are % of overall. make sure the 2 on each side add up to 100 */\n// left side\nmapmod.left_top = 55;\nmapmod.left_bottom = 45;\n//right side\nmapmod.right_top = 50;\nmapmod.right_bottom = 50;\n\n\n\n\n\n/***** Where the magic happens *****/\n\n// cancel the multi-line input since it doesn't play well with the resized windows\nif (mapmod.old_lineheight) {\n    fix_input_line_height = mapmod.old_lineheight;\n}\nelse {\n    mapmod.old_lineheight = fix_input_line_height;\n}\nfix_input_line_height = (function() {\n    var cached_function = fix_input_line_height;\n    return function(redraw) {\n        //believe me I really did try\n        return;       \n        var result = cached_function.apply(this, arguments);  \n        return result;\n    };\n})();\n\n\n\nif (mapmod.old_redraw_ui) {\n    redraw_interface = mapmod.old_redraw_ui;\n}\nelse {\n    mapmod.old_redraw_ui = redraw_interface;\n}\nredraw_interface = (function() {\n    var cached_function = redraw_interface;\n    return function() {\n\n        var result = cached_function.apply(this, arguments);\n        \n        // resize windows\n        if (mapmod.resize_windows) {\n            $(\"#box_2\").css(\"width\", mapmod.left_column+\"%\");\n            $(\"#box_3\").css(\"width\", mapmod.middle_column+\"%\");\n            $(\"#box_4\").css(\"width\", mapmod.right_column+\"%\");\n            $(\"#container_1\").css(\"height\", mapmod.left_top+\"%\");\n            $(\"#container_2\").css(\"height\", mapmod.left_bottom+\"%\");\n            $(\"#container_3\").css(\"height\", mapmod.right_top+\"%\");\n            $(\"#container_4\").css(\"height\", mapmod.right_bottom+\"%\");\n        }\n                    \n        return result;\n    };\n})();\n\n\n\nif (mapmod.old_loadmap) {\n    Map.load_map_data = mapmod.old_loadmap;\n}\nelse {\n    mapmod.old_loadmap = Map.load_map_data;\n}\nMap.load_map_data = (function() {\n    var cached_function = Map.load_map_data;\n    return function(options) {\n        \n        var result = cached_function.apply(this, arguments);\n        var map = this;\n        \n        // set zoom\n        map.zoom = mapmod.zoom;\n        map.update_canvas($(\"#map_canvas\"));\n        \n        // resize flag\n        var size_now = $('#marker_char_current').css('background-size');\n        var new_size = mapmod.flag_size;\n        if (size_now != new_size) {\n            $(\"#marker_char_current\").css(\"background-size\", new_size+\"px\").css(\"background-repeat\", \"no-repeat\").css(\"background-position\", \"left bottom\");\n        }\n\n        return result;\n    };\n})();\n\n\n\nif (mapmod.old_overhead) {\n    Map.display_overhead_map = mapmod.old_overhead;\n}\nelse {\n    mapmod.old_overhead = Map.display_overhead_map;\n}\nMap.display_overhead_map = (function() {\n    var cached_function = Map.display_overhead_map;\n    return function(text) {\n\n        var result = cached_function.apply(this, arguments);\n        \n        //set wilderness map font size and line height\n        if (mapmod.resize_map) {\n            $(\"#map_overhead_content\").css(\"font-size\", mapmod.font_size+\"px\");\n            $(\"#map_overhead\").css(\"line-height\", mapmod.line_height+\"px\");\n            // hide the \"no map\" window since it doesn't update properly\n            $(\"#map_nomap\").css(\"visibility\", \"hidden\");\n\n        }\n        \n        // center wilderness map if smaller than map window\n        var ttl = Number($(\"#map_overhead\").css(\"height\").replace(\"px\", \"\"));\n        var inn = Number($(\"#map_overhead_content\").css(\"height\").replace(\"px\", \"\"));\n        if ((ttl - inn) > 2) {\n            var diff = (ttl - inn) / 2;\n            $(\"#map_overhead\").css(\"margin-top\", diff+\"px\");           \n        }\n        \n        return result;\n    };\n})();\n\n\n\nif (mapmod.old_drawexits) {\n    Map.draw_exits_string = mapmod.old_drawexits;\n}\nelse {\n    mapmod.old_drawexits = Map.draw_exits_string;\n}\nMap.draw_exits_string = (function() {\n    var cached_function = Map.draw_exits_string;\n    return function() {\n        \n        // replace 2nd room name with area name\n        var map = this;\n        var area = map.cAreaName;\n        if (area == null) {area = \"Area Name Unknown\";}\n        var area_piece = area.match(/, [A-Za-z0-9 ]+/);\n        area = area.replace(area_piece, \" \");\n        area_piece = String(String(area_piece).replace(/, /, \"\"))\n        area_piece = area_piece.charAt(0).toUpperCase()+area_piece.slice(1);       \n        if (area_piece != \"Null\") {// we're in too deep just roll with it\n            area = area_piece+\" \"+area;\n        }\n        $(\"#map_room_name\").html(\"<b>\"+area+\"</b>\").css(\"font-size\", \"14px\").css(\"text-align\", \"center\");\n        \n        var result = cached_function.apply(this, arguments);\n\n        return result;\n    };\n})();\n\n\n\nmapmod.activated = 1;","items":[]},{"type":"alias","name":"","enabled":true,"id":3,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"function","fn":"onLoad"},{"action":"notify","notice":"Mapmod reloaded.","notice_fg":"#84a800","notice_bg":"#000000"}],"text":"mapmod reload"}]}